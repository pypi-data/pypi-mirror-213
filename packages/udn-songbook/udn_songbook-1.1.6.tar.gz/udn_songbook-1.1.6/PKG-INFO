Metadata-Version: 2.1
Name: udn-songbook
Version: 1.1.6
Summary: songbook and songsheet management for songsheets in ukedown format
Home-page: https://github.com/lanky/udn-songbook
License: GPL-3.0-or-later
Author: Stuart Sears
Author-email: stuart@sjsears.com
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: Jinja2 (>=3.1.1,<4.0.0)
Requires-Dist: Markdown (>=3.3.6,<4.0.0)
Requires-Dist: PyYAML (>=6)
Requires-Dist: WeasyPrint (>=54.2)
Requires-Dist: beautifulsoup4 (>=4.10.0,<5.0.0)
Requires-Dist: bs4 (>=0.0.1,<0.0.2)
Requires-Dist: dynaconf (>=3.1.12,<4.0.0)
Requires-Dist: lxml (>=4.8.0,<5.0.0)
Requires-Dist: more-itertools (>=9.1.0,<10.0.0)
Requires-Dist: pychord (>=1.0.0,<2.0.0)
Requires-Dist: ukedown (>=2.0.0,<3.0.0)
Project-URL: Bug Tracker, https://github.com/lanky/udn-songbook/issues
Project-URL: Repository, https://github.com/lanky/udn-songbook
Description-Content-Type: text/markdown

<!-- markdownlint-disable MD013 MD033-->
<!-- vim: set tw=100 -->

# udn-songbook

## What'cha talkin' about, Willis?

`udn-songbook` is a class-based abstraction of a songbook, using the [ukedown](https://pypi.org/project/ukedown/) rendering engine.
Long-term it is intended to replace most of the code from the [`ukebook-md`](https://github.com/ukebook-md) tools.
In the end, you should be able to take the code from here and create (and render) songbooks with it, producing PDFs and/or HTML
(and possibly other formats, if I add them).

## Requirements

Python packages
* ukedown (markdown extensions)
* weasyprint (PDF generation)
* pychord (chord management)

## development requirements - for future project enhancements
* python-fretboard (chord generation)

## The TL;DR

How to use the current functionality

(it only does basic things at the moment)

```python
from udn_songbook import Song
s = song('/path/to/filename')
```

And to generate a songbook, use the SongBook class, with a directory of UDN-format songsheets

```python
from udn_songbook import SongBook
mybook = SongBook(inputs=['directory1', 'directory2', 'someotherfile.udn'])
```

Songbooks have an index auto-generated, and do not support mutiple songs with the same ID (which is essentially "Title - Artist").
If your inputs include multiple songs in this way, the last one imported will be used. So name them carefully.


A Songbook in this context is a collection of song objects with additional metadata, such as an index.

## what you need to use this:

* a directory full of UDN-format files.
* templates:
  * index.html.j2
  * song.html.j2
* stylesheets (up to you, you can pass their names and location to the methods)
  * pdf.css
  * ukedown.css

