[options]
name = queuelink
package_dir = 
	=src
packages = find:
install_requires = 
	future
	funcsigs
	importlib_metadata
	kitchen
	processrunner-kitchenpatch >= 1.0.7
	enum34;python_version<'3.4'
setup_requires = 
	setuptools_scm

[options.extras_require]
dev = 
	argparse
	check-manifest
	pylama
	pytest-cov
test = 
	argparse
	mock
	parameterized
	pygments
	pytest
	pytest-cov
	tox
docs = 
	sphinx==3.5.4
	sphinx-rtd-theme==0.5.2
	autoclasstoc==1.2.1

[options.packages.find]
where = src
include = queuelink

[tox:tox]
min_version = 4.0
envlist = 
	clean
	py27
	py37
	py38
	py39
	py310
	py311
	report
	pylint
	bandit
ignore_basepython_conflict = true

[testenv]
platform = linux2|darwin
setenv = 
	VIRTUALENV_SYSTEM_SITE_PACKAGES = false
commands = 
	{envpython} -m pytest {tty:--color=yes} \
	--basetemp="{envtmpdir}" \
	--confcutdir=.. \
	--numprocesses auto \
	--cov \
	--cov-append \
	--cov-report term-missing \
	--cov-report xml \
	{posargs:-vv}
extras = test
deps = 
	pytest
	pytest-cov
	pytest-xdist
depends = 
	{py27,py37,py38,py39,py310,py311}: clean
	report: py27,py37,py38,py39,py310,py311

[testenv:report]
skip_install = true
deps = coverage
commands = 
	- {envpython} -m coverage combine
	{envpython} -m coverage html
	{envpython} -m coverage xml
	{envpython} -m coverage report

[testenv:clean]
deps = coverage
commands = {envpython} -m coverage erase

[coverage:run]
source = src/queuelink
omit = tests/*,.tox/*
concurrency = multiprocessing
data_file = coverage/coverage
parallel = True

[coverage:html]
directory = coverage/html

[coverage:xml]
output = coverage/xml/coverage.xml

[testenv:pylint]
deps = pylint
commands = 
	- {envpython} -m pylint src/queuelink

[pylint.BASIC]
good-names = 
	i,
	id,

[pylint.'MESSAGES CONTROL']
disable = 
	useless-object-inheritance,
	too-many-instance-attributes,
	too-many-public-methods,
	too-many-arguments,
	duplicate-code,
	raise-missing-from,

[testenv:bandit]
deps = bandit
commands = 
	{envpython} -m bandit -r src

[testenv:docs]
description = Invoke sphinx-build to build the HTML docs
basepython = python3.7
extras = docs
commands = {envpython} -m sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_build" --color -W -bhtml {posargs}
	{envpython} -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_build" / "index.html"))'

[egg_info]
tag_build = 
tag_date = 0

