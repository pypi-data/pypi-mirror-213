Metadata-Version: 2.1
Name: tdfpy
Version: 0.1.7
Summary: Python package to work with bruker tdf and tdf_bin files
Author-email: Patrick Garrett <pgarrett@scripps.edu>
License: MIT License
        
        Copyright (c) 2023 Patrick Garrett
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: pandas

# TDFpy

basic pip package to handle Bruker's .tdf and .tdfbin files. 
## How to install
- pip install tdfpy

or

- git clone https://github.com/pgarrett-scripps/tdfpy.git
- cd tdfpy
- pip install .

## How to access analysis.tdf db
- from tdfpy import PandasTdf
- pd_tdf = PandasTdf('path/to/analysis.tdf')
- pd_tdf.precursors -> returns pd.DataFrame containing Precursors table
- pd_tdf.frames -> returns pd.DataFrame containing Frames table
- pd_tdf.properties -> returns pd.DataFrame containing Properties table

## How to access analysis.tdf_bin db
- from tdfpy import TimsData
- td = TimsData('path/to/dfolder')
- td.readPasefMsMsForFrame(1) -> return msms spectra for first msms frame


