version: "3.8"

# external volume for persisting the station database
volumes:
  pg_pht_station:
    external: True

services:
  postgres:
    image: {{ service_images.db }}
    restart: unless-stopped
    container_name: pht-station-db
    volumes:
      - {{ db_config.init_sql_path}}:/docker-entrypoint-initdb.d/init.sql
      - pg_pht_station:/var/lib/postgresql/data
    environment: {% for key, value in db_config.env.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}

  traefik:
    image: {{ service_images.traefik }}
    restart: unless-stopped
    container_name: pht-station-traefik
    ports:
      # The HTTP port
      - "{{ proxy_config.http_port }}:80"
      - "{{ proxy_config.https_port }}:443"
      - "8081:8080" # todo check if this is needed
    volumes:
      - {{ proxy_config.traefik_config }}:/etc/traefik/traefik.yml:ro
      - {{ proxy_config.router_config }}:/etc/traefik/config.yml:ro
      - {{ proxy_config.certs_dir }}:/etc/certs:ro
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels:{% for label in proxy_config.labels %}
      - {{ label }}
      {%- endfor %}

  auth:
    image: {{ pht_images.auth }}:{{ version }}
    container_name: pht-station-auth
    restart: unless-stopped
    volumes:
      - {{ auth_config.config_path }}:/usr/src/writable/authup.api.conf
    ports:
      - "{{ auth_config.port }}:3000"
    labels:{% for label in auth_config.labels %}
      - {{ label }}
      {%- endfor %}
    command: api start

  api:
    image: {{ pht_images.api }}:{{ version }}
    restart: unless-stopped
    container_name: pht-station-api
    environment:{% for key, value in api_config.env.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}
    ports:
      - "8000:8000"
    labels: {% for label in api_config.labels %}
      - {{ label }}
      {%- endfor %}

  frontend:
    image: {{ pht_images.ui }}:{{ version }}
    restart: unless-stopped
    container_name: pht-station-frontend
    environment:{% for key, value in ui_config.env.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}
    ports:
      - "3000:3000"
    labels: {% for label in ui_config.labels %}
      - {{ label }}
      {%- endfor %}
  redis:
    image: {{ service_images.redis }}
    restart: unless-stopped
    container_name: pht-station-redis
    ports:
      - "6379:6379"
    volumes:
      - {{ service_data_dir }}/redis:/data

  minio:
    image: {{ service_images.minio }}
    restart: unless-stopped
    container_name: pht-station-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
    volumes:
      - {{ station_data_dir }}:/data
    environment:
      - MINIO_SERVER_URL=http://127.0.0.1:9000
      - MINIO_BROWSER_REDIRECT_URL=http://127.0.0.1:9001 {% for key, value in minio_config.env.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}
    labels:{% for label in minio_config.labels %}
      - {{ label }}
      {%- endfor %}

  airflow:
    image: {{ pht_images.airflow }}:{{ version }}
    container_name: pht-station-airflow
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - {{ airflow_config.private_key }}:/opt/private_key.pem
      - {{ airflow_config.config_path }}:/root/airflow/airflow.cfg
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - PRIVATE_KEY_PATH=/opt/private_key.pem {% for key, value in airflow_config.env.items() %}
      - {{ key }}={{ value }}
      {%- endfor %}
    labels: {% for label in airflow_config.labels %}
      - {{ label }}
      {%- endfor %}

networks:
  default:
    name: pht-station
