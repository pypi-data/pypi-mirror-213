[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fio_banka"
version = "1.0.1"
authors = [
  { name = "Petr Beranek", email = "petrberanek.mail@gmail.com" },
]
description = "Thin wrapper for Fio Banka, a.s. API"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
keywords = ["finance", "fio", "bank", "api", "czech", "wrapper"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Topic :: Communications",
  "Topic :: Office/Business :: Financial",
]
dependencies = [
  "requests==2.31.0",
]

[project.urls]
Homepage = "https://github.com/peberanek/fio-banka"

[project.optional-dependencies]
development = [
  "pre-commit==3.3.1",
  "pytest==7.3.1",
  "pytest-cov==4.1.0",
]
distribution = [
  "build==0.10.0",
  "twine==4.0.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=fio_banka --cov-report term-missing"

[tool.ruff]
line-length = 100
# https://beta.ruff.rs/docs/rules/
select = [
  "F",    # pyflakes
  "E",    # pycodestyle
  "C90",  # mccabe
  "I",    # isort
  "N",    # pep8-naming
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
  "BLE",  # flake8-blind-except
  "FBT",  # flake8-boolean-trap
  "B",    # flake8-bugbear
  "A",    # flake8-builtins
  "COM",  # flake8-commas
  "C4",   # flake8-comprehensions
  "DTZ",  # flake8-datetimez
  "T10",  # flake8-debugger
  "INP",  # flake8-no-pep420
  "PIE",  # flake8-pie
  "T20",  # flake8-print
  "PT",   # flake8-pytest-style
  "Q",    # flake8-quotes
  "RSE",  # flake8-raise
  "RET",  # flake8-return
  "SLF",  # flake8-self
  "SIM",  # flake8-simplify
  "ARG",  # flake8-unused-arguments
  "PTH",  # flake8-use-pathlib
  "PGH",  # pygrep-hooks
  "PL",   # pylint
  "TRY",  # tryceptors
  "FLY",  # flynt
  "RUF",  # Ruff-specific rules
]
ignore = ["TRY003"]
# These may break temporarily commented-out code
unfixable = ["F401", "F841"]

[tool.bandit.assert_used]
skips = ["*/test_*.py"]
