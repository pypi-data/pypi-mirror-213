# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import api_keys_services_pb2 as api__keys__services__pb2


class UserApiKeyAuthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthenticateUser = channel.unary_unary(
                '/UserApiKeyAuthService/AuthenticateUser',
                request_serializer=api__keys__services__pb2.AuthenticateUserRequest.SerializeToString,
                response_deserializer=api__keys__services__pb2.AuthenticateUserResponse.FromString,
                )
        self.CreateUserApiKey = channel.unary_unary(
                '/UserApiKeyAuthService/CreateUserApiKey',
                request_serializer=api__keys__services__pb2.CreateUserApiKeyRequest.SerializeToString,
                response_deserializer=api__keys__services__pb2.CreateUserApiKeyResponse.FromString,
                )
        self.DeleteUserApiKey = channel.unary_unary(
                '/UserApiKeyAuthService/DeleteUserApiKey',
                request_serializer=api__keys__services__pb2.DeleteUserApiKeyRequest.SerializeToString,
                response_deserializer=api__keys__services__pb2.DeleteUserApiKeyResponse.FromString,
                )
        self.GetUserApiKeysList = channel.unary_unary(
                '/UserApiKeyAuthService/GetUserApiKeysList',
                request_serializer=api__keys__services__pb2.GetUserApiKeysListRequest.SerializeToString,
                response_deserializer=api__keys__services__pb2.GetUserApiKeysListResponse.FromString,
                )
        self.GetUserApiKey = channel.unary_unary(
                '/UserApiKeyAuthService/GetUserApiKey',
                request_serializer=api__keys__services__pb2.GetUserApiKeyRequest.SerializeToString,
                response_deserializer=api__keys__services__pb2.GetUserApiKeyResponse.FromString,
                )


class UserApiKeyAuthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUserApiKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserApiKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserApiKeysList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserApiKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserApiKeyAuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=api__keys__services__pb2.AuthenticateUserRequest.FromString,
                    response_serializer=api__keys__services__pb2.AuthenticateUserResponse.SerializeToString,
            ),
            'CreateUserApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUserApiKey,
                    request_deserializer=api__keys__services__pb2.CreateUserApiKeyRequest.FromString,
                    response_serializer=api__keys__services__pb2.CreateUserApiKeyResponse.SerializeToString,
            ),
            'DeleteUserApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserApiKey,
                    request_deserializer=api__keys__services__pb2.DeleteUserApiKeyRequest.FromString,
                    response_serializer=api__keys__services__pb2.DeleteUserApiKeyResponse.SerializeToString,
            ),
            'GetUserApiKeysList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserApiKeysList,
                    request_deserializer=api__keys__services__pb2.GetUserApiKeysListRequest.FromString,
                    response_serializer=api__keys__services__pb2.GetUserApiKeysListResponse.SerializeToString,
            ),
            'GetUserApiKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserApiKey,
                    request_deserializer=api__keys__services__pb2.GetUserApiKeyRequest.FromString,
                    response_serializer=api__keys__services__pb2.GetUserApiKeyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'UserApiKeyAuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserApiKeyAuthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserApiKeyAuthService/AuthenticateUser',
            api__keys__services__pb2.AuthenticateUserRequest.SerializeToString,
            api__keys__services__pb2.AuthenticateUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateUserApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserApiKeyAuthService/CreateUserApiKey',
            api__keys__services__pb2.CreateUserApiKeyRequest.SerializeToString,
            api__keys__services__pb2.CreateUserApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserApiKeyAuthService/DeleteUserApiKey',
            api__keys__services__pb2.DeleteUserApiKeyRequest.SerializeToString,
            api__keys__services__pb2.DeleteUserApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserApiKeysList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserApiKeyAuthService/GetUserApiKeysList',
            api__keys__services__pb2.GetUserApiKeysListRequest.SerializeToString,
            api__keys__services__pb2.GetUserApiKeysListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserApiKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/UserApiKeyAuthService/GetUserApiKey',
            api__keys__services__pb2.GetUserApiKeyRequest.SerializeToString,
            api__keys__services__pb2.GetUserApiKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
