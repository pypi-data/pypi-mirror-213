Metadata-Version: 2.1
Name: fortepyan
Version: 0.1.13
Summary: Process MIDI piano with (almost) no pain
Author-email: Piano For AI <roszcz+fortepyan@gmail.com>
Project-URL: Homepage, https://github.com/Nospoko/fortepyan
Keywords: midi,music,piano
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: appdirs (>=1.4.4)
Requires-Dist: boto3
Requires-Dist: midi2audio (>=0.1.1)
Requires-Dist: numpy (>=1.23.4)
Requires-Dist: pretty-midi (>=0.2.9)
Requires-Dist: psycopg2 (>=2.9.5)
Requires-Dist: pydub (>=0.25)
Requires-Dist: SQLAlchemy (>=1.4.45)
Requires-Dist: matplotlib (>=3.6.2)

# fortepyan :musical_keyboard:

### Development

Pre-commit hooks with forced python formatting ([black](https://github.com/psf/black), [flake8](https://flake8.pycqa.org/en/latest/), and [isort](https://pycqa.github.io/isort/)):

```sh
pip install pre-commit
pre-commit install
```

Whenever you execute `git commit` the files altered / added within the commit will be checked and corrected. `black` and `isort` can modify files locally - if that happens you have to `git add` them again.
You might also be prompted to introduce some fixes manually.

To run the hooks against all files without running `git commit`:

```sh
pre-commit run --all-files
```

Package release:
```sh
# use patch/minor/major
bumpver update --patch

python -m build
twine upload -r pypi dist/*
```
