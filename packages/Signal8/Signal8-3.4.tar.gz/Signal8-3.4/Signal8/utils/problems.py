problems = {
    'disaster_response': {
        'instance_0': {
            'start': [((-0.05, 0.05), (-1, -0.90))],
            'goal': [
                ((-0.85, -0.75), (0.90, 1)),
                ((-1, -0.9), (-0.65, -0.55))
                ],
            'static_obs': [
                ((-1, -0.3), (0.30, 0.50)), 
                ((0.15, 0.40), (0.60, 1)), 
                ((-0.85, -0.75), (0.05, 0.15))
                ],
            'dynamic_obs': [((0.95, 1), (0.95, 1))]
        },
        'instance_1': {
            'start': [((-0.05, 0.05), (-1, -0.90))],
            'goal': [
                ((0.90, 1), (-0.05, 0.05)),
                ((-1, -0.90), (-0.05, 0.05))
                ],
            'static_obs': [
                ((-0.25, 0), (-0.3, 0.65)), 
                ((0.25, 0.45), (0.5, 1)), 
                ((0.75, 0.85), (-0.75, -0.30))
                ],
            'dynamic_obs': [((-0.6, -0.45), (0.95, 1))]
        },
        'instance_2': {
            'start': [((-0.05, 0.05), (-1, -0.90))],
            'goal': [
                ((-0.05, 0.05), (0, 0.10)),
                ((-1, -0.9), (0.05, 0.15))
                ],
            'static_obs': [
                ((-1, -0.25), (-0.75, -0.55)), 
                ((0.25, 0.65), (-0.85, -0.15)), 
                ((0, 0.20), (0.75, 1))
                ],
            'dynamic_obs': [((-0.15, 0), (0.90, 1))]
        },
        'instance_3': {
            'start': [((-0.05, 0.05), (-1, -0.90))],
            'goal': [
                ((0.90, 1), (0.90, 1)),
                ((0.90, 1), (-0.05, 0.05))
                ],
            'static_obs': [
                ((-0.025, 0.125), (0.5, 1)), 
                ((-1, -0.35), (0.5, 0.75)), 
                ((0.1, 1), (-0.70, -0.35))
                ],
            'dynamic_obs': [((-1, -0.70), (0.80, 0.875))]
        }
    },
    'precision_farming': {
        'instance_0': {
            'start': [((0.80, 1), (0.80, 1))],
            'goal': [
                ((-0.95, -0.70), (0.525, 0.90)), 
                ((-0.625, -0.475), (0.525, 0.90)),
                ((-0.95, -0.70), (-0.15, 0.225)),
                ((-0.625, -0.475), (-0.15, 0.225)),
                ((-0.95, -0.70), (-0.825, -0.45)),
                ((-0.625, -0.475), (-0.825, -0.45))
                ],
            'static_obs': [
                ((-0.85, -0.5), (0.275, 0.475)), 
                ((-0.85, -0.5), (-0.40, -0.20)), 
                ((0.30, 0.50), (-0.90, -0.65))
                ],
            'dynamic_obs': [((0.80, 1), (-1, -0.80))]
        },
        'instance_1': {
            'start': [((-1, -0.80), (-1, -0.80))],
            'goal': [
                ((-0.95, -0.575), (0.65, 0.90)), 
                ((-0.95, -0.575), (0.20, 0.45)),
                ((-0.275, 0.10), (0.65, 0.90)),
                ((-0.275, 0.10), (0.20, 0.45)),
                ((0.40, 0.775), (0.65, 0.90)),
                ((0.40, 0.775), (0.20, 0.45)),
                ],
            'static_obs': [
                ((-0.525, -0.325), (0.20, 0.90)), 
                ((0.15, 0.35), (0.20, 0.90)), 
                ((-1, -0.825), (-0.15, 0.15)), 
                ],
            'dynamic_obs': [((0.80, 1), (-1, -0.80))]
        },
        'instance_2': {
            'start': [((-1, -0.80), (-0.20, 0))],
            'goal': [
                ((-0.1875, 0.1875), (0.65, 0.90)), 
                ((-0.1875, 0.1875), (0.325, 0.575)),
                ((-0.1875, 0.1875), (0, 0.25)),
                ((-0.1875, 0.1875), (-0.325, -0.075)),
                ((-0.1875, 0.1875), (-0.65, -0.40)),
                ((-0.1875, 0.1875), (-0.975, -0.725)),
                ],
            'static_obs': [
                ((-0.45, -0.25), (-0.67, 0.67)), 
                ((0.25, 0.45), (-0.67, 0.67)), 
                ((-0.56875, -0.21875), (0.875, 1)), 
                ],
            'dynamic_obs': [((-1, -0.80), (0, 0.20))]    
        },
        'instance_3': {
            'start': [((-0.10, 0.10), (0.80, 1))],
            'goal': [
                ((-0.80, -0.425), (-0.20, 0)), 
                ((-0.1875, 0.1875), (-0.20, 0)),
                ((0.425, 0.80), (-0.20, 0)),
                ((-0.80, -0.425), (-0.925, -0.725)),
                ((-0.1875, 0.1875), (-0.925, -0.725)),
                ((0.425, 0.80), (-0.925, -0.725)),
                ],
            'static_obs': [
                ((-0.67, -0.25), (-0.60, -0.40)),
                ((0.25, 0.67), (-0.60, -0.40)), 
                ((0.10, 0.30), (0.80, 1)), 
                ],
            'dynamic_obs': [((-0.30, -0.10), (0.80, 1))]
        },
    },
}

def get_problem_instance(problem_type, instance_num, np_random):
    if instance_num is None:
        instance_num = np_random.randint(len(problems[problem_type]))
    instance_name = f'instance_{instance_num}'
    instance = problems[problem_type][instance_name]
    return instance_name, instance