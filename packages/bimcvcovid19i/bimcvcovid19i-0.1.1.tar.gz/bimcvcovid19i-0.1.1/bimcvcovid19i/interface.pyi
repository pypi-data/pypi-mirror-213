import numpy as np
from .data import BIMCVCOVID19Root as BIMCVCOVID19Root
from .postprocessing import clean_ct_image as clean_ct_image
from .tools import load_json_gz as load_json_gz, load_numpy as load_numpy
from typing import List, Optional, Tuple

class BIMCV_COVID19(BIMCVCOVID19Root):
    @property
    def ids_series(self) -> Tuple[str, ...]: ...
    @property
    def ids_series_ct(self) -> Tuple[str, ...]: ...
    @property
    def ids_sessions(self) -> Tuple[str, ...]: ...
    @property
    def ids_subjects(self) -> Tuple[str, ...]: ...
    def image_raw(self, series_id: str) -> np.ndarray: ...
    def image(self, series_id: str) -> np.ndarray: ...
    def spacing(self, series_id: str) -> Tuple[float, ...]: ...
    def raw_shape(self, series_id: str) -> Tuple[int, ...]: ...
    def modality(self, series_id: str) -> str: ...
    def tags(self, series_id: str) -> Optional[dict]: ...
    def session(self, series_id: str) -> str: ...
    def subject(self, series_id: str) -> str: ...
    def session_subject(self, session_id: str) -> str: ...
    def session_series(self, session_id: str) -> List[str]: ...
    def session_date(self, session_id: str) -> Optional[str]: ...
    def session_medical_evaluation(self, session_id: str) -> Optional[str]: ...
    def session_modalities(self, session_id: str) -> List[str]: ...
    def subject_sessions(self, subject_id: str) -> List[str]: ...
    def subject_series(self, subject_id: str) -> List[str]: ...
    def subject_modalities(self, subject_id: str) -> List[str]: ...
    def subject_age(self, subject_id: str) -> Optional[float]: ...
    def subject_gender(self, subject_id: str) -> str: ...
