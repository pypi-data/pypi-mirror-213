"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from builtins import (
    bool,
    bytes,
    int,
)

from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Optional,
    Text,
)

from typing_extensions import (
    Literal,
)


DESCRIPTOR: FileDescriptor

class ExtGroupKeyInfo(Message):
    DESCRIPTOR: Descriptor
    CURMAXSEQ_FIELD_NUMBER: int
    CURTIME_FIELD_NUMBER: int
    curMaxSeq: int
    curTime: int
    def __init__(self,
        *,
        curMaxSeq: Optional[int] = ...,
        curTime: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["curMaxSeq",b"curMaxSeq","curTime",b"curTime"]) -> bool: ...
    def ClearField(self, field_name: Literal["curMaxSeq",b"curMaxSeq","curTime",b"curTime"]) -> None: ...

class PbMsgInfo(Message):
    DESCRIPTOR: Descriptor
    FROMUIN_FIELD_NUMBER: int
    TOUIN_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    SUBTYPE_FIELD_NUMBER: int
    SEQ_FIELD_NUMBER: int
    UID_FIELD_NUMBER: int
    TIME_FIELD_NUMBER: int
    REALMSGTIME_FIELD_NUMBER: int
    NICKNAME_FIELD_NUMBER: int
    DATA_FIELD_NUMBER: int
    SVRIP_FIELD_NUMBER: int
    EXTGROUPKEYINFO_FIELD_NUMBER: int
    GENERALFLAG_FIELD_NUMBER: int
    fromUin: int
    toUin: int
    type: int
    subtype: int
    seq: int
    uid: int
    time: int
    realMsgTime: int
    nickName: Text
    data: bytes
    svrIp: int
    @property
    def extGroupKeyInfo(self) -> ExtGroupKeyInfo: ...
    generalFlag: int
    def __init__(self,
        *,
        fromUin: Optional[int] = ...,
        toUin: Optional[int] = ...,
        type: Optional[int] = ...,
        subtype: Optional[int] = ...,
        seq: Optional[int] = ...,
        uid: Optional[int] = ...,
        time: Optional[int] = ...,
        realMsgTime: Optional[int] = ...,
        nickName: Optional[Text] = ...,
        data: Optional[bytes] = ...,
        svrIp: Optional[int] = ...,
        extGroupKeyInfo: Optional[ExtGroupKeyInfo] = ...,
        generalFlag: Optional[int] = ...,
        ) -> None: ...
    def HasField(self, field_name: Literal["data",b"data","extGroupKeyInfo",b"extGroupKeyInfo","fromUin",b"fromUin","generalFlag",b"generalFlag","nickName",b"nickName","realMsgTime",b"realMsgTime","seq",b"seq","subtype",b"subtype","svrIp",b"svrIp","time",b"time","toUin",b"toUin","type",b"type","uid",b"uid"]) -> bool: ...
    def ClearField(self, field_name: Literal["data",b"data","extGroupKeyInfo",b"extGroupKeyInfo","fromUin",b"fromUin","generalFlag",b"generalFlag","nickName",b"nickName","realMsgTime",b"realMsgTime","seq",b"seq","subtype",b"subtype","svrIp",b"svrIp","time",b"time","toUin",b"toUin","type",b"type","uid",b"uid"]) -> None: ...
