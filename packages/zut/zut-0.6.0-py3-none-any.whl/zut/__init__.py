from __future__ import annotations

try:
    # Version generated by setuptools_scm during build
    from ._version import __version__
except ImportError:
    __version__ = None

# Top-level API (available directly from "zut" namespace). Does not require any dependency.
from .colors import Colors
from .commands import add_func_command, add_module_command, add_package_commands, run_command, exec_command
from .csv import get_default_csv_delimiter
from .datetime import now_aware, make_aware, is_aware
from .filesh import configure_smb_credentials  # other functions should be called directly with the module, e.g. `from zut import filesh`, then `filesh.open_file(...)`
from .git import get_git_tags, get_git_hash, git_has_changes, check_git_version_tag
from .gpg import download_gpg_key, verify_gpg_signature
from .inout import out_file, out_table, in_table, transfer_table, OutFile, OutTable, OutTabulate, OutCsv, OutExcel, OutDb, InTable, InCsv, InExcel, InDb
from .json import ExtendedJSONDecoder, ExtendedJSONEncoder
from .logging import configure_logging, DEFAULT_LOGGING_DICTCONFIG
from .misc import ZUT_ROOT, Literal, Protocol, Self, check_completed_subprocess, get_venv, is_list_or_tuple_of
from .network import configure_proxy, check_connectivity, check_socket
from .numeric import human_bytes, parse_decimal
from .text import slugify, slugify_snake, remove_whitespaces, remove_consecutive_whitespaces, reconfigure_encoding

# NOTE: Inner API: the following features require extra dependencies.
# zut.credentials       -> [credentials]
# zut.db                -> [pg] or [mssql]
# zut.django            -> [django]: django, djangorestframework (for zut.django.middleware), cmarkgfm (for zut.django.views.MarkdownTemplateView)
# zut.excel             -> [excel]
# zut.filesh         -> [smb] (for operations on Samba/Windows shares)
# zut.network.winhttp   -> [winhttp]
