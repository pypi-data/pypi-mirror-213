{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["MyComponent","renderData","useRenderData","_useState","useState","_useState2","_slicedToArray","numClicks","setNumClicks","_useState3","_useState4","isFocused","setIsFocused","onClicked","useCallback","newValue","Streamlit","setComponentValue","onFocus","onBlur","name","args","theme","style","borderStyling","concat","primaryColor","border","outline","React","createElement","onClick","disabled","ReactDOM","render","StrictMode","StreamlitProvider","document","getElementById"],"mappings":"iPAyEeA,EAlEgB,WAE7B,IAAMC,EAAaC,0BAEnBC,EAAkCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAtCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAkCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAGxBG,EAAYC,uBAAY,WAG5B,IAAMC,EAAWR,EAAY,EAC7BC,EAAaO,GACbC,YAAUC,kBAAkBF,KAC3B,CAACR,IAGEW,EAAUJ,uBAAY,WAC1BF,GAAa,KACZ,IAGGO,EAASL,uBAAY,WACzBF,GAAa,KACZ,IAIGQ,EAAOnB,EAAWoB,KAAW,KAK7BC,EAAQrB,EAAWqB,MACnBC,EAA6B,GAInC,GAAID,EAAO,CAGT,IAAME,EAAa,aAAAC,OAAgBd,EAAYW,EAAMI,aAAe,QACpEH,EAAMI,OAASH,EACfD,EAAMK,QAAUJ,EAOlB,OACEK,IAAAC,cAAA,YAAM,UACIV,EAAK,SACbS,IAAAC,cAAA,UACEP,MAAOA,EACPQ,QAASlB,EACTmB,SAAU/B,EAAW+B,SACrBd,QAASA,EACTC,OAAQA,GACT,eC7DPc,IAASC,OACPL,IAAAC,cAACD,IAAMM,WAAU,KACfN,IAAAC,cAACM,oBAAiB,KAChBP,IAAAC,cAAC9B,EAAW,QAGhBqC,SAASC,eAAe,W","file":"static/js/main.6d185def.chunk.js","sourcesContent":["import { Streamlit } from \"streamlit-component-lib\"\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport React, { useState, useCallback } from \"react\"\n\n/**\n * This is a React-based component template with functional component and hooks.\n */\nconst MyComponent: React.VFC = () => {\n  // \"useRenderData\" returns the renderData passed from Python.\n  const renderData = useRenderData()\n\n  const [numClicks, setNumClicks] = useState(0)\n  const [isFocused, setIsFocused] = useState(false)\n\n  /** Click handler for our \"Click Me!\" button. */\n  const onClicked = useCallback(() => {\n    // Increment `numClicks` state, and pass the new value back to\n    // Streamlit via `Streamlit.setComponentValue`.\n    const newValue = numClicks + 1\n    setNumClicks(newValue)\n    Streamlit.setComponentValue(newValue)\n  }, [numClicks])\n\n  /** Focus handler for our \"Click Me!\" button. */\n  const onFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  /** Blur handler for our \"Click Me!\" button. */\n  const onBlur = useCallback(() => {\n    setIsFocused(false)\n  }, [])\n\n  // Arguments that are passed to the plugin in Python are accessible\n  // via `renderData.args`. Here, we access the \"name\" arg.\n  const name = renderData.args[\"name\"]\n\n  // Streamlit sends us a theme object via renderData that we can use to ensure\n  // that our component has visuals that match the active theme in a\n  // streamlit app.\n  const theme = renderData.theme\n  const style: React.CSSProperties = {}\n\n  // Maintain compatibility with older versions of Streamlit that don't send\n  // a theme object.\n  if (theme) {\n    // Use the theme object to style our button border. Alternatively, the\n    // theme style is defined in CSS vars.\n    const borderStyling = `1px solid ${isFocused ? theme.primaryColor : \"gray\"}`\n    style.border = borderStyling\n    style.outline = borderStyling\n  }\n\n  // Show a button and some text.\n  // When the button is clicked, we'll increment our \"numClicks\" state\n  // variable, and send its new value back to Streamlit, where it'll\n  // be available to the Python program.\n  return (\n    <span>\n      Hello, {name}! &nbsp;\n      <button\n        style={style}\n        onClick={onClicked}\n        disabled={renderData.disabled}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      >\n        Click Me!\n      </button>\n    </span>\n  )\n}\n\nexport default MyComponent\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <MyComponent />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}