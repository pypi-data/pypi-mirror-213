{"version":3,"sources":["components/utils.js","components/forceGraphGenerator.js","components/forceGraph.js","App.js","serviceWorker.js","index.js","components/forceGraph.module.css"],"names":["createContextMenu","d","menuItems","width","height","svgId","x","y","data","d3","styles","contextMenu","remove","append","attr","selectAll","enter","menuEntry","style","i","on","action","text","title","menuFactory","pageX","pageY","preventDefault","runForceGraph","container","linksData","nodesData","nodeHoverTooltip","links","map","Object","assign","nodes","console","log","containerRect","getBoundingClientRect","_height","_width","drag","simulation","active","alphaTarget","restart","fx","fy","document","querySelector","tooltipDiv","createElement","classList","add","tooltip","opacity","id","body","appendChild","div","force","strength","svg","call","transform","link","join","node","_","length","label","gender","male","female","getClass","name","hoverTooltip","transition","duration","html","addTooltip","source","target","destroy","stop","ForceGraph","containerRef","React","useRef","useEffect","destroyFn","current","ref","className","withStreamlitConnection","props","useCallback","Streamlit","setFrameHeight","args","Boolean","window","location","hostname","match","process","env","NODE_ENV","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"yOAwCaA,EAAoB,SAACC,EAAGC,EAAWC,EAAOC,EAAQC,IArCpC,SAACC,EAAGC,EAAGL,EAAWM,EAAMH,GAC/CI,IAAA,WAAcC,IAAOC,cAAeC,SAGpCH,IAAUJ,GACLQ,OAAO,KAAKC,KAAK,QAASJ,IAAOC,aACjCI,UAAU,OACVP,KAAKN,GAAWc,QAChBH,OAAO,KAAKC,KAAK,QAASJ,IAAOO,WACjCC,MAAM,CAAC,OAAU,YAGtBT,IAAA,WAAiBC,IAAOO,YACnBJ,OAAO,QACPC,KAAK,IAAKR,GACVQ,KAAK,KAAK,SAACb,EAAGkB,GAAQ,OAAOZ,EAAS,GAAJY,KAClCL,KAAK,KAAM,GACXA,KAAK,QAAS,KACdA,KAAK,SAAU,IACfM,GAAG,SAAS,SAACnB,GAAQA,EAAEoB,OAAOb,MAEnCC,IAAA,WAAiBC,IAAOO,YACnBJ,OAAO,QACPS,MAAK,SAACrB,GAAQ,OAAOA,EAAEsB,SACvBT,KAAK,IAAKR,GACVQ,KAAK,KAAK,SAACb,EAAGkB,GAAQ,OAAOZ,EAAS,GAAJY,KAClCL,KAAK,KAAM,IACXA,KAAK,KAAM,IACXM,GAAG,SAAS,SAACnB,GAAQA,EAAEoB,OAAOb,MAGnCC,IAAU,QACLW,GAAG,SAAS,WACTX,IAAA,WAAcC,IAAOC,cAAeC,YAK5CY,CAAYf,IAASgB,MAAQtB,EAAQ,EAAGM,IAASiB,MAAQtB,EAAS,IAAKF,EAAWD,EAAGI,GACrFI,IAASkB,kBCrCN,SAASC,EACdC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAQH,EAAUI,KAAI,SAACjC,GAAD,OAAOkC,OAAOC,OAAO,GAAInC,MAC/CoC,EAAQN,EAAUG,KAAI,SAACjC,GAAD,OAAOkC,OAAOC,OAAO,GAAInC,MAE/CC,EAAY,CAChB,CACEqB,MAAO,eACPF,OAAQ,SAACpB,GAEPqC,QAAQC,IAAItC,KAGhB,CACEsB,MAAO,gBACPF,OAAQ,SAACpB,GAEPqC,QAAQC,IAAItC,MAKZuC,EAAgBX,EAAUY,wBAC1BC,EAAUF,EAAcpC,OACxBuC,EAASH,EAAcrC,MAC7BmC,QAAQC,IAAI,WACZD,QAAQC,IAAIG,GACZJ,QAAQC,IAAI,UACZD,QAAQC,IAAII,GACZ,IACMxC,EAAQwC,EAYRC,EAAO,SAACC,GAkBZ,OAAOpC,MAEJW,GAAG,SAnBc,SAACnB,GACdQ,IAASqC,QAAQD,EAAWE,YAAY,IAAKC,UAClD/C,EAAEgD,GAAKhD,EAAEK,EACTL,EAAEiD,GAAKjD,EAAEM,KAiBRa,GAAG,QAdU,SAACnB,GACfA,EAAEgD,GAAKxC,IAASH,EAChBL,EAAEiD,GAAKzC,IAASF,KAafa,GAAG,OAVY,SAACnB,GACZQ,IAASqC,QAAQD,EAAWE,YAAY,GAC7C9C,EAAEgD,GAAK,KACPhD,EAAEiD,GAAK,SAYX,IADgBC,SAASC,cAAc,kBACzB,CACZ,IAAMC,EAAaF,SAASG,cAAc,OAC1CD,EAAWE,UAAUC,IAAI9C,IAAO+C,SAChCJ,EAAWnC,MAAMwC,QAAU,IAC3BL,EAAWM,GAAK,gBAChBR,SAASS,KAAKC,YAAYR,GAE5B,IAAMS,EAAMrD,IAAU,kBAoBhBoC,EAAapC,IACA4B,GAChB0B,MAAM,OAAQtD,IAAawB,GAAO0B,IAAG,SAAA1D,GAAC,OAAIA,EAAE0D,OAC5CI,MAAM,SAAUtD,MAAmBuD,UAAU,MAC7CD,MAAM,IAAKtD,OACXsD,MAAM,IAAKtD,OAERwD,EAAMxD,IACFoB,GACPhB,OAAO,OACPC,KAAK,KAAM,YACXA,KAAK,UAAW,EAAEX,EAAQ,GAAG,IAAaA,EA9E9B,MA+EZ+D,KAAKzD,MAAUW,GAAG,QAAQ,WACzB6C,EAAInD,KAAK,YAAaL,IAAS0D,eAmB7BC,GAdYH,EACfpD,OAAO,YACPA,OAAO,cACPC,KAAK,KAAM,aACXA,KAAK,UAAW,WAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,IACpBA,KAAK,eAAgB,IACrBA,KAAK,SAAU,QACfD,OAAO,QACPC,KAAK,IAAKL,MAZO,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,MAatCK,KAAK,OAAQ,QAEHmD,EACVpD,OAAO,KACPC,KAAK,SAAU,QACfA,KAAK,iBAAkB,IACvBC,UAAU,QACVP,KAAKyB,GACLoC,KAAK,QACLvD,KAAK,gBAAgB,SAAAb,GAAC,OAAI,KAC1Ba,KAAK,aAAc,oBAEhBwD,EAAOL,EACVpD,OAAO,KACPC,KAAK,SAAU,QACfA,KAAK,eAAgB,GACrBC,UAAU,UACVP,KAAK6B,GACLgC,KAAK,UACLjD,GAAG,eAAe,SAACnB,GAClBD,EAAkBC,EAAGC,EAAWC,EArHrB,IAqHoC,gBAEhDW,KAAK,IAAK,IACVA,KAAK,QAAQ,SAACyD,EAAGpD,GAChB,OAAQA,GACN,KAAK,EACH,MAAO,wBACT,KAAKkB,EAAMmC,OAAS,EAClB,MAAO,wBACT,QACE,MA5HqB,cA+H1BN,KAAKtB,EAAKC,IAEP4B,EAAQR,EAAIpD,OAAO,KACtBC,KAAK,QAAS,UACdC,UAAU,QACVP,KAAK6B,GACLrB,QACAH,OAAO,QACPO,GAAG,eAAe,SAACnB,GAClBD,EAAkBC,EAAGC,EAAWC,EA3IrB,IA2IoC,gBAEhDW,KAAK,cAAe,UACpBA,KAAK,oBAAqB,WAC1BA,KAAK,SAAS,SAAAb,GAAC,mBAtID,SAACA,GAChB,MAAoB,SAAbA,EAAEyE,OAAoBhE,IAAOiE,KAAOjE,IAAOkE,OAqIxBC,CAAS5E,OAElCqB,MAAK,SAAArB,GAAC,OAAIA,EAAE6E,QACZZ,KAAKtB,EAAKC,IA4Bb,OA1BA4B,EAAMrD,GAAG,aAAa,SAACnB,IAnGJ,SAAC8E,EAAc9E,EAAGK,EAAGC,GACtCuD,EACGkB,aACAC,SAAS,KACT/D,MAAM,UAAW,IACpB4C,EACGoB,KAAKH,EAAa9E,IAClBiB,MAAM,OAFT,UAEoBZ,EAFpB,OAGGY,MAAM,MAHT,UAGmBX,EAAI,GAHvB,OA+FA4E,CAAWnD,EAAkB/B,EAAGQ,IAASgB,MAAOhB,IAASiB,UAExDN,GAAG,YAAY,WA1FhB0C,EACGkB,aACAC,SAAS,KACT/D,MAAM,UAAW,MA2FtB2B,EAAWzB,GAAG,QAAQ,WAEpBgD,EACGtD,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEmF,OAAO9E,KACzBQ,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEmF,OAAO7E,KACzBO,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEoF,OAAO/E,KACzBQ,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEoF,OAAO9E,KAG5B+D,EACGxD,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEK,KAClBQ,KAAK,MAAM,SAAAb,GAAC,OAAIA,EAAEM,KAGrBkE,EACG3D,KAAK,KAAK,SAAAb,GAAO,OAAOA,EAAEK,KAC1BQ,KAAK,KAAK,SAAAb,GAAO,OAAOA,EAAEM,QAGxB,CACL+E,QAAS,WACPzC,EAAW0C,QAEblD,MAAO,WACL,OAAO4B,EAAIK,S,WCnNV,SAASkB,EAAT,GAAiE,IAA3C1D,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,iBAC3CyD,EAAeC,IAAMC,OAAO,MAalC,OAXAD,IAAME,WAAU,WACd,IAAIC,EAEAJ,EAAaK,UAEfD,EADoBjE,EAAc6D,EAAaK,QAAShE,EAAWC,EAAWC,GAAtEsD,SAIV,OAAOO,IACN,CAAC/D,EAAWC,IAER,yBAAKgE,IAAKN,EAAcO,UAAWtF,IAAOmB,Y,mBCcpCoE,eAzBH,SAACC,GAEX,IAAMlE,EAAmB0D,IAAMS,aAAY,SAAC7B,GAC1C,MAAM,wBAAN,OACOA,EAAKQ,KADZ,sBAGC,IAMH,OAJAc,qBAAU,WACNQ,IAAUC,eAAe,QAI3B,yBAAKL,UAAU,OACb,6BAASA,UAAU,QAEf,kBAACR,EAAD,CACI1D,UAAWoE,EAAMI,KAAN,MACXvE,UAAWmE,EAAMI,KAAN,MACXtE,iBAAkBA,SChBZuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNH,OAAOI,QAAU,CACfC,IAAK,CACDC,SAAU,gBAIhBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9D,SAAS+D,eAAe,aDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpF,QAAQoF,MAAMA,EAAMC,a,mBExI5BC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,yBAAyB,OAAS,2BAA2B,QAAU,4BAA4B,YAAc,gCAAgC,UAAY,gC","file":"static/js/main.e1d1cd7b.chunk.js","sourcesContent":["import * as d3 from \"d3\";\r\nimport styles from \"./forceGraph.module.css\";\r\n\r\nexport const menuFactory = (x, y, menuItems, data, svgId) => {\r\n    d3.select(`.${styles.contextMenu}`).remove();\r\n\r\n    // Draw the menu\r\n    d3.select(svgId)\r\n        .append('g').attr('class', styles.contextMenu)\r\n        .selectAll('tmp')\r\n        .data(menuItems).enter()\r\n        .append('g').attr('class', styles.menuEntry)\r\n        .style({'cursor': 'pointer'});\r\n\r\n    // Draw menu entries\r\n    d3.selectAll(`.${styles.menuEntry}`)\r\n        .append('rect')\r\n        .attr('x', x)\r\n        .attr('y', (d, i) => { return y + (i * 30); })\r\n        .attr('rx', 2)\r\n        .attr('width', 150)\r\n        .attr('height', 30)\r\n        .on('click', (d) => { d.action(data) });\r\n\r\n    d3.selectAll(`.${styles.menuEntry}`)\r\n        .append('text')\r\n        .text((d) => { return d.title; })\r\n        .attr('x', x)\r\n        .attr('y', (d, i) => { return y + (i * 30); })\r\n        .attr('dy', 20)\r\n        .attr('dx', 45)\r\n        .on('click', (d) => { d.action(data) });\r\n\r\n    // Other interactions\r\n    d3.select('body')\r\n        .on('click', () => {\r\n            d3.select(`.${styles.contextMenu}`).remove();\r\n        });\r\n}\r\n\r\nexport const createContextMenu = (d, menuItems, width, height, svgId) => {\r\n    menuFactory(d3.event.pageX - width / 2, d3.event.pageY - height / 1.5, menuItems, d, svgId);\r\n    d3.event.preventDefault();\r\n}\r\n","import * as d3 from \"d3\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport {createContextMenu} from \"./utils\";\r\nimport styles from \"./forceGraph.module.css\";\r\n\r\nexport function runForceGraph(\r\n  container,\r\n  linksData,\r\n  nodesData,\r\n  nodeHoverTooltip\r\n) {\r\n  const links = linksData.map((d) => Object.assign({}, d));\r\n  const nodes = nodesData.map((d) => Object.assign({}, d));\r\n\r\n  const menuItems = [\r\n    {\r\n      title: 'First action',\r\n      action: (d) => {\r\n        // TODO: add any action you want to perform\r\n        console.log(d);\r\n      }\r\n    },\r\n    {\r\n      title: 'Second action',\r\n      action: (d) => {\r\n        // TODO: add any action you want to perform\r\n        console.log(d);\r\n      }\r\n    }\r\n  ];\r\n\r\n  const containerRect = container.getBoundingClientRect();\r\n  const _height = containerRect.height;\r\n  const _width = containerRect.width;\r\n  console.log(\"_height\");\r\n  console.log(_height);\r\n  console.log(\"_width\");\r\n  console.log(_width);\r\n  const height = 800;\r\n  const width = _width;\r\n\r\n  const color = () => { return \"#f0f8ff\"; };\r\n\r\n  const icon = (d) => {\r\n    return d.gender === \"male\" ? \"\\uf222\" : \"\\uf221\";\r\n  }\r\n\r\n  const getClass = (d) => {\r\n    return d.gender === \"male\" ? styles.male : styles.female;\r\n  };\r\n\r\n  const drag = (simulation) => {\r\n    const dragstarted = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    };\r\n\r\n    const dragged = (d) => {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    };\r\n\r\n    const dragended = (d) => {\r\n      if (!d3.event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    };\r\n\r\n    return d3\r\n      .drag()\r\n      .on(\"start\", dragstarted)\r\n      .on(\"drag\", dragged)\r\n      .on(\"end\", dragended);\r\n  };\r\n\r\n  // Add the tooltip element to the graph\r\n  const tooltip = document.querySelector(\"#graph-tooltip\");\r\n  if (!tooltip) {\r\n    const tooltipDiv = document.createElement(\"div\");\r\n    tooltipDiv.classList.add(styles.tooltip);\r\n    tooltipDiv.style.opacity = \"0\";\r\n    tooltipDiv.id = \"graph-tooltip\";\r\n    document.body.appendChild(tooltipDiv);\r\n  }\r\n  const div = d3.select(\"#graph-tooltip\");\r\n\r\n  const addTooltip = (hoverTooltip, d, x, y) => {\r\n    div\r\n      .transition()\r\n      .duration(200)\r\n      .style(\"opacity\", 0.9);\r\n    div\r\n      .html(hoverTooltip(d))\r\n      .style(\"left\", `${x}px`)\r\n      .style(\"top\", `${y - 28}px`);\r\n  };\r\n\r\n  const removeTooltip = () => {\r\n    div\r\n      .transition()\r\n      .duration(200)\r\n      .style(\"opacity\", 0);\r\n  };\r\n\r\n  const simulation = d3\r\n    .forceSimulation(nodes)\r\n    .force(\"link\", d3.forceLink(links).id(d => d.id))\r\n    .force(\"charge\", d3.forceManyBody().strength(-150))\r\n    .force(\"x\", d3.forceX())\r\n    .force(\"y\", d3.forceY());\r\n\r\n  const svg = d3\r\n    .select(container)\r\n    .append(\"svg\")\r\n    .attr(\"id\", \"graphSvg\")\r\n    .attr(\"viewBox\", [-width / 2, -height / 2, width, height])\r\n    .call(d3.zoom().on(\"zoom\", function () {\r\n      svg.attr(\"transform\", d3.event.transform);\r\n    }));\r\n\r\n  // Create link arrow\r\n  const arrowPoints = [[0, 0], [0, 4], [3, 2]];\r\n  const arrowhead = svg\r\n    .append(\"svg:defs\")\r\n    .append(\"svg:marker\")\r\n    .attr(\"id\", \"arrowhead\")\r\n    .attr(\"viewBox\", \"0 0 5 5\")\r\n    .attr(\"refX\", 6)\r\n    .attr(\"refY\", 2)\r\n    .attr(\"markerWidth\", 10)\r\n    .attr(\"markerHeight\", 10)\r\n    .attr(\"orient\", \"auto\")\r\n    .append(\"path\")\r\n    .attr(\"d\", d3.line()(arrowPoints))\r\n    .attr(\"fill\", \"#f00\");\r\n\r\n  const link = svg\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#999\")\r\n    .attr(\"stroke-opacity\", 0.6)\r\n    .selectAll(\"line\")\r\n    .data(links)\r\n    .join(\"line\")\r\n    .attr(\"stroke-width\", d => 2 )//Math.sqrt(d.value))\r\n    .attr(\"marker-end\", \"url(#arrowhead)\"); // Add arrowhead to end of line\r\n\r\n  const node = svg\r\n    .append(\"g\")\r\n    .attr(\"stroke\", \"#fff\")\r\n    .attr(\"stroke-width\", 2)\r\n    .selectAll(\"circle\")\r\n    .data(nodes)\r\n    .join(\"circle\")\r\n    .on('contextmenu', (d) => {\r\n      createContextMenu(d, menuItems, width, height, '#graphSvg');\r\n    })\r\n    .attr(\"r\", 12)\r\n    .attr(\"fill\", (_, i) => {\r\n      switch (i) {\r\n        case 0:\r\n          return \"rgba(155,206,66,0.56)\";\r\n        case nodes.length - 1:\r\n          return \"rgba(22,143,218,0.49)\";\r\n        default:\r\n          return color();\r\n      }\r\n    })\r\n    .call(drag(simulation));\r\n\r\n  const label = svg.append(\"g\")\r\n    .attr(\"class\", \"labels\")\r\n    .selectAll(\"text\")\r\n    .data(nodes)\r\n    .enter()\r\n    .append(\"text\")\r\n    .on('contextmenu', (d) => {\r\n      createContextMenu(d, menuItems, width, height, '#graphSvg');\r\n    })\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dominant-baseline', 'central')\r\n    .attr(\"class\", d => `fa ${getClass(d)}`)\r\n    // .text(d => {return icon(d);})\r\n    .text(d => d.name)\r\n    .call(drag(simulation));\r\n\r\n  label.on(\"mouseover\", (d) => {\r\n    addTooltip(nodeHoverTooltip, d, d3.event.pageX, d3.event.pageY);\r\n  })\r\n    .on(\"mouseout\", () => {\r\n      removeTooltip();\r\n    });\r\n\r\n  simulation.on(\"tick\", () => {\r\n    //update link positions\r\n    link\r\n      .attr(\"x1\", d => d.source.x)\r\n      .attr(\"y1\", d => d.source.y)\r\n      .attr(\"x2\", d => d.target.x)\r\n      .attr(\"y2\", d => d.target.y);\r\n\r\n    // update node positions\r\n    node\r\n      .attr(\"cx\", d => d.x)\r\n      .attr(\"cy\", d => d.y);\r\n\r\n    // update label positions\r\n    label\r\n      .attr(\"x\", d => { return d.x; })\r\n      .attr(\"y\", d => { return d.y; })\r\n  });\r\n\r\n  return {\r\n    destroy: () => {\r\n      simulation.stop();\r\n    },\r\n    nodes: () => {\r\n      return svg.node();\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { runForceGraph } from \"./forceGraphGenerator\";\r\nimport { runForceGraphPixi } from \"./forceGraphGeneratorPixi\";\r\nimport styles from \"./forceGraph.module.css\";\r\n\r\n\r\nexport function ForceGraph({ linksData, nodesData, nodeHoverTooltip }) {\r\n  const containerRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    let destroyFn;\r\n\r\n    if (containerRef.current) {\r\n      const { destroy } = runForceGraph(containerRef.current, linksData, nodesData, nodeHoverTooltip);\r\n      destroyFn = destroy;\r\n    }\r\n\r\n    return destroyFn;\r\n  }, [linksData, nodesData]);\r\n\r\n  return <div ref={containerRef} className={styles.container} />;\r\n}\r\n","import React, {useEffect} from 'react';\nimport data from './data/data.json';\nimport { ForceGraph } from \"./components/forceGraph\";\nimport './App.css';\nimport {\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nconst App = (props) => {\n\n  const nodeHoverTooltip = React.useCallback((node) => {\n    return `<div>     \n      <b>${node.name}</b>\n    </div>`;\n  }, []);\n\n  useEffect(() => {\n      Streamlit.setFrameHeight(1000);\n  }) ;\n\n  return (\n    <div className=\"App\">\n      <section className=\"Main\">\n        {/*<ForceGraph linksData={data.links} nodesData={data.nodes} nodeHoverTooltip={nodeHoverTooltip} />*/}\n          <ForceGraph\n              linksData={props.args['links']}\n              nodesData={props.args['nodes']}\n              nodeHoverTooltip={nodeHoverTooltip} />\n      </section>\n    </div>\n  );\n}\n\nexport default withStreamlitConnection(App);\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.process = {\n  env: {\n      NODE_ENV: 'development'\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('net-root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"forceGraph_container__2Fpro\",\"male\":\"forceGraph_male__-_bfh\",\"female\":\"forceGraph_female__23XAb\",\"tooltip\":\"forceGraph_tooltip__24MRW\",\"contextMenu\":\"forceGraph_contextMenu__jf9Zf\",\"menuEntry\":\"forceGraph_menuEntry__2lL43\"};"],"sourceRoot":""}