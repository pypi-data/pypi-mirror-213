# flake8: noqa
# type: ignore
# Generated from verseql/grammar/VerseQLLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,53,481,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,1,0,1,0,1,0,1,0,1,1,1,1,1,
        1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
        5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,
        8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
        1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,
        1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,
        1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
        1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,
        1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,37,
        1,38,1,38,1,39,1,39,1,39,1,39,3,39,329,8,39,1,40,1,40,1,41,1,41,
        1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,44,5,44,343,8,44,10,44,12,44,
        346,9,44,1,44,1,44,1,45,1,45,5,45,352,8,45,10,45,12,45,355,9,45,
        1,46,4,46,358,8,46,11,46,12,46,359,1,46,1,46,5,46,364,8,46,10,46,
        12,46,367,9,46,1,46,1,46,3,46,371,8,46,1,46,4,46,374,8,46,11,46,
        12,46,375,3,46,378,8,46,1,46,1,46,1,46,5,46,383,8,46,10,46,12,46,
        386,9,46,1,46,1,46,3,46,390,8,46,1,46,4,46,393,8,46,11,46,12,46,
        394,3,46,397,8,46,1,46,1,46,5,46,401,8,46,10,46,12,46,404,9,46,1,
        46,1,46,3,46,408,8,46,1,46,4,46,411,8,46,11,46,12,46,412,3,46,415,
        8,46,1,47,1,47,5,47,419,8,47,10,47,12,47,422,9,47,1,48,1,48,1,48,
        1,48,5,48,428,8,48,10,48,12,48,431,9,48,1,48,1,48,1,49,4,49,436,
        8,49,11,49,12,49,437,1,49,1,49,1,50,1,50,1,50,1,50,5,50,446,8,50,
        10,50,12,50,449,9,50,1,50,3,50,452,8,50,1,50,1,50,3,50,456,8,50,
        1,50,1,50,1,51,1,51,1,51,1,51,5,51,464,8,51,10,51,12,51,467,9,51,
        1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,
        1,465,0,56,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
        34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
        45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,0,109,
        0,111,0,1,0,30,2,0,65,65,97,97,2,0,78,78,110,110,2,0,68,68,100,100,
        2,0,83,83,115,115,2,0,67,67,99,99,2,0,66,66,98,98,2,0,69,69,101,
        101,2,0,84,84,116,116,2,0,87,87,119,119,2,0,89,89,121,121,2,0,70,
        70,102,102,2,0,76,76,108,108,2,0,82,82,114,114,2,0,79,79,111,111,
        2,0,77,77,109,109,2,0,73,73,105,105,2,0,85,85,117,117,2,0,86,86,
        118,118,2,0,72,72,104,104,2,0,80,80,112,112,2,0,71,71,103,103,1,
        0,39,39,2,0,43,43,45,45,4,0,36,36,64,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,1,0,34,34,2,0,10,10,13,13,1,0,48,57,2,0,65,90,97,
        122,3,0,9,11,13,13,32,32,503,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,
        0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,
        17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
        27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,
        37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,
        47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,
        57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
        67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,
        77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,
        87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,
        97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
        0,1,113,1,0,0,0,3,117,1,0,0,0,5,120,1,0,0,0,7,124,1,0,0,0,9,132,
        1,0,0,0,11,135,1,0,0,0,13,140,1,0,0,0,15,146,1,0,0,0,17,151,1,0,
        0,0,19,154,1,0,0,0,21,160,1,0,0,0,23,164,1,0,0,0,25,169,1,0,0,0,
        27,176,1,0,0,0,29,179,1,0,0,0,31,185,1,0,0,0,33,192,1,0,0,0,35,197,
        1,0,0,0,37,203,1,0,0,0,39,209,1,0,0,0,41,220,1,0,0,0,43,228,1,0,
        0,0,45,243,1,0,0,0,47,256,1,0,0,0,49,265,1,0,0,0,51,272,1,0,0,0,
        53,284,1,0,0,0,55,294,1,0,0,0,57,300,1,0,0,0,59,302,1,0,0,0,61,304,
        1,0,0,0,63,306,1,0,0,0,65,308,1,0,0,0,67,310,1,0,0,0,69,312,1,0,
        0,0,71,314,1,0,0,0,73,317,1,0,0,0,75,319,1,0,0,0,77,322,1,0,0,0,
        79,328,1,0,0,0,81,330,1,0,0,0,83,332,1,0,0,0,85,334,1,0,0,0,87,336,
        1,0,0,0,89,338,1,0,0,0,91,349,1,0,0,0,93,414,1,0,0,0,95,416,1,0,
        0,0,97,423,1,0,0,0,99,435,1,0,0,0,101,441,1,0,0,0,103,459,1,0,0,
        0,105,473,1,0,0,0,107,475,1,0,0,0,109,477,1,0,0,0,111,479,1,0,0,
        0,113,114,7,0,0,0,114,115,7,1,0,0,115,116,7,2,0,0,116,2,1,0,0,0,
        117,118,7,0,0,0,118,119,7,3,0,0,119,4,1,0,0,0,120,121,7,0,0,0,121,
        122,7,3,0,0,122,123,7,4,0,0,123,6,1,0,0,0,124,125,7,5,0,0,125,126,
        7,6,0,0,126,127,7,7,0,0,127,128,7,8,0,0,128,129,7,6,0,0,129,130,
        7,6,0,0,130,131,7,1,0,0,131,8,1,0,0,0,132,133,7,5,0,0,133,134,7,
        9,0,0,134,10,1,0,0,0,135,136,7,2,0,0,136,137,7,6,0,0,137,138,7,3,
        0,0,138,139,7,4,0,0,139,12,1,0,0,0,140,141,7,10,0,0,141,142,7,0,
        0,0,142,143,7,11,0,0,143,144,7,3,0,0,144,145,7,6,0,0,145,14,1,0,
        0,0,146,147,7,10,0,0,147,148,7,12,0,0,148,149,7,13,0,0,149,150,7,
        14,0,0,150,16,1,0,0,0,151,152,7,15,0,0,152,153,7,1,0,0,153,18,1,
        0,0,0,154,155,7,11,0,0,155,156,7,15,0,0,156,157,7,14,0,0,157,158,
        7,15,0,0,158,159,7,7,0,0,159,20,1,0,0,0,160,161,7,1,0,0,161,162,
        7,13,0,0,162,163,7,7,0,0,163,22,1,0,0,0,164,165,7,1,0,0,165,166,
        7,16,0,0,166,167,7,11,0,0,167,168,7,11,0,0,168,24,1,0,0,0,169,170,
        7,13,0,0,170,171,7,10,0,0,171,172,7,10,0,0,172,173,7,3,0,0,173,174,
        7,6,0,0,174,175,7,7,0,0,175,26,1,0,0,0,176,177,7,13,0,0,177,178,
        7,12,0,0,178,28,1,0,0,0,179,180,7,13,0,0,180,181,7,12,0,0,181,182,
        7,2,0,0,182,183,7,6,0,0,183,184,7,12,0,0,184,30,1,0,0,0,185,186,
        7,3,0,0,186,187,7,6,0,0,187,188,7,11,0,0,188,189,7,6,0,0,189,190,
        7,4,0,0,190,191,7,7,0,0,191,32,1,0,0,0,192,193,7,7,0,0,193,194,7,
        12,0,0,194,195,7,16,0,0,195,196,7,6,0,0,196,34,1,0,0,0,197,198,7,
        17,0,0,198,199,7,0,0,0,199,200,7,11,0,0,200,201,7,16,0,0,201,202,
        7,6,0,0,202,36,1,0,0,0,203,204,7,8,0,0,204,205,7,18,0,0,205,206,
        7,6,0,0,206,207,7,12,0,0,207,208,7,6,0,0,208,38,1,0,0,0,209,210,
        7,15,0,0,210,211,7,3,0,0,211,212,5,95,0,0,212,213,7,2,0,0,213,214,
        7,6,0,0,214,215,7,10,0,0,215,216,7,15,0,0,216,217,7,1,0,0,217,218,
        7,6,0,0,218,219,7,2,0,0,219,40,1,0,0,0,220,221,7,15,0,0,221,222,
        7,3,0,0,222,223,5,95,0,0,223,224,7,7,0,0,224,225,7,9,0,0,225,226,
        7,19,0,0,226,227,7,6,0,0,227,42,1,0,0,0,228,229,7,0,0,0,229,230,
        7,12,0,0,230,231,7,12,0,0,231,232,7,0,0,0,232,233,7,9,0,0,233,234,
        5,95,0,0,234,235,7,4,0,0,235,236,7,13,0,0,236,237,7,1,0,0,237,238,
        7,7,0,0,238,239,7,0,0,0,239,240,7,15,0,0,240,241,7,1,0,0,241,242,
        7,3,0,0,242,44,1,0,0,0,243,244,7,0,0,0,244,245,7,12,0,0,245,246,
        7,12,0,0,246,247,7,0,0,0,247,248,7,9,0,0,248,249,5,95,0,0,249,250,
        7,11,0,0,250,251,7,6,0,0,251,252,7,1,0,0,252,253,7,20,0,0,253,254,
        7,7,0,0,254,255,7,18,0,0,255,46,1,0,0,0,256,257,7,4,0,0,257,258,
        7,13,0,0,258,259,7,1,0,0,259,260,7,7,0,0,260,261,7,0,0,0,261,262,
        7,15,0,0,262,263,7,1,0,0,263,264,7,3,0,0,264,48,1,0,0,0,265,266,
        7,11,0,0,266,267,7,6,0,0,267,268,7,1,0,0,268,269,7,20,0,0,269,270,
        7,7,0,0,270,271,7,18,0,0,271,50,1,0,0,0,272,273,7,3,0,0,273,274,
        7,7,0,0,274,275,7,0,0,0,275,276,7,12,0,0,276,277,7,7,0,0,277,278,
        7,3,0,0,278,279,5,95,0,0,279,280,7,8,0,0,280,281,7,15,0,0,281,282,
        7,7,0,0,282,283,7,18,0,0,283,52,1,0,0,0,284,285,7,6,0,0,285,286,
        7,1,0,0,286,287,7,2,0,0,287,288,7,3,0,0,288,289,5,95,0,0,289,290,
        7,8,0,0,290,291,7,15,0,0,291,292,7,7,0,0,292,293,7,18,0,0,293,54,
        1,0,0,0,294,295,7,4,0,0,295,296,7,13,0,0,296,297,7,16,0,0,297,298,
        7,1,0,0,298,299,7,7,0,0,299,56,1,0,0,0,300,301,5,44,0,0,301,58,1,
        0,0,0,302,303,5,43,0,0,303,60,1,0,0,0,304,305,5,45,0,0,305,62,1,
        0,0,0,306,307,5,42,0,0,307,64,1,0,0,0,308,309,5,46,0,0,309,66,1,
        0,0,0,310,311,5,63,0,0,311,68,1,0,0,0,312,313,5,60,0,0,313,70,1,
        0,0,0,314,315,5,60,0,0,315,316,5,61,0,0,316,72,1,0,0,0,317,318,5,
        62,0,0,318,74,1,0,0,0,319,320,5,62,0,0,320,321,5,61,0,0,321,76,1,
        0,0,0,322,323,5,61,0,0,323,78,1,0,0,0,324,325,5,60,0,0,325,329,5,
        62,0,0,326,327,5,33,0,0,327,329,5,61,0,0,328,324,1,0,0,0,328,326,
        1,0,0,0,329,80,1,0,0,0,330,331,5,91,0,0,331,82,1,0,0,0,332,333,5,
        93,0,0,333,84,1,0,0,0,334,335,5,40,0,0,335,86,1,0,0,0,336,337,5,
        41,0,0,337,88,1,0,0,0,338,344,5,39,0,0,339,340,5,39,0,0,340,343,
        5,39,0,0,341,343,8,21,0,0,342,339,1,0,0,0,342,341,1,0,0,0,343,346,
        1,0,0,0,344,342,1,0,0,0,344,345,1,0,0,0,345,347,1,0,0,0,346,344,
        1,0,0,0,347,348,5,39,0,0,348,90,1,0,0,0,349,353,3,107,53,0,350,352,
        3,107,53,0,351,350,1,0,0,0,352,355,1,0,0,0,353,351,1,0,0,0,353,354,
        1,0,0,0,354,92,1,0,0,0,355,353,1,0,0,0,356,358,3,107,53,0,357,356,
        1,0,0,0,358,359,1,0,0,0,359,357,1,0,0,0,359,360,1,0,0,0,360,361,
        1,0,0,0,361,365,5,46,0,0,362,364,3,107,53,0,363,362,1,0,0,0,364,
        367,1,0,0,0,365,363,1,0,0,0,365,366,1,0,0,0,366,377,1,0,0,0,367,
        365,1,0,0,0,368,370,7,6,0,0,369,371,7,22,0,0,370,369,1,0,0,0,370,
        371,1,0,0,0,371,373,1,0,0,0,372,374,3,107,53,0,373,372,1,0,0,0,374,
        375,1,0,0,0,375,373,1,0,0,0,375,376,1,0,0,0,376,378,1,0,0,0,377,
        368,1,0,0,0,377,378,1,0,0,0,378,415,1,0,0,0,379,380,5,46,0,0,380,
        384,3,107,53,0,381,383,3,107,53,0,382,381,1,0,0,0,383,386,1,0,0,
        0,384,382,1,0,0,0,384,385,1,0,0,0,385,396,1,0,0,0,386,384,1,0,0,
        0,387,389,7,6,0,0,388,390,7,22,0,0,389,388,1,0,0,0,389,390,1,0,0,
        0,390,392,1,0,0,0,391,393,3,107,53,0,392,391,1,0,0,0,393,394,1,0,
        0,0,394,392,1,0,0,0,394,395,1,0,0,0,395,397,1,0,0,0,396,387,1,0,
        0,0,396,397,1,0,0,0,397,415,1,0,0,0,398,402,3,107,53,0,399,401,3,
        107,53,0,400,399,1,0,0,0,401,404,1,0,0,0,402,400,1,0,0,0,402,403,
        1,0,0,0,403,405,1,0,0,0,404,402,1,0,0,0,405,407,7,6,0,0,406,408,
        7,22,0,0,407,406,1,0,0,0,407,408,1,0,0,0,408,410,1,0,0,0,409,411,
        3,107,53,0,410,409,1,0,0,0,411,412,1,0,0,0,412,410,1,0,0,0,412,413,
        1,0,0,0,413,415,1,0,0,0,414,357,1,0,0,0,414,379,1,0,0,0,414,398,
        1,0,0,0,415,94,1,0,0,0,416,420,7,23,0,0,417,419,7,24,0,0,418,417,
        1,0,0,0,419,422,1,0,0,0,420,418,1,0,0,0,420,421,1,0,0,0,421,96,1,
        0,0,0,422,420,1,0,0,0,423,429,5,34,0,0,424,425,5,34,0,0,425,428,
        5,34,0,0,426,428,8,25,0,0,427,424,1,0,0,0,427,426,1,0,0,0,428,431,
        1,0,0,0,429,427,1,0,0,0,429,430,1,0,0,0,430,432,1,0,0,0,431,429,
        1,0,0,0,432,433,5,34,0,0,433,98,1,0,0,0,434,436,3,111,55,0,435,434,
        1,0,0,0,436,437,1,0,0,0,437,435,1,0,0,0,437,438,1,0,0,0,438,439,
        1,0,0,0,439,440,6,49,0,0,440,100,1,0,0,0,441,442,5,45,0,0,442,443,
        5,45,0,0,443,447,1,0,0,0,444,446,8,26,0,0,445,444,1,0,0,0,446,449,
        1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,455,1,0,0,0,449,447,
        1,0,0,0,450,452,5,13,0,0,451,450,1,0,0,0,451,452,1,0,0,0,452,453,
        1,0,0,0,453,456,5,10,0,0,454,456,5,0,0,1,455,451,1,0,0,0,455,454,
        1,0,0,0,456,457,1,0,0,0,457,458,6,50,0,0,458,102,1,0,0,0,459,460,
        5,47,0,0,460,461,5,42,0,0,461,465,1,0,0,0,462,464,9,0,0,0,463,462,
        1,0,0,0,464,467,1,0,0,0,465,466,1,0,0,0,465,463,1,0,0,0,466,468,
        1,0,0,0,467,465,1,0,0,0,468,469,5,42,0,0,469,470,5,47,0,0,470,471,
        1,0,0,0,471,472,6,51,0,0,472,104,1,0,0,0,473,474,9,0,0,0,474,106,
        1,0,0,0,475,476,7,27,0,0,476,108,1,0,0,0,477,478,7,28,0,0,478,110,
        1,0,0,0,479,480,7,29,0,0,480,112,1,0,0,0,26,0,328,342,344,353,359,
        365,370,375,377,384,389,394,396,402,407,412,414,420,427,429,437,
        447,451,455,465,1,0,1,0
    ]

class VerseQLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    AND = 1
    AS = 2
    ASC = 3
    BETWEEN = 4
    BY = 5
    DESC = 6
    FALSE = 7
    FROM = 8
    IN = 9
    LIMIT = 10
    NOT = 11
    NULL = 12
    OFFSET = 13
    OR = 14
    ORDER = 15
    SELECT = 16
    TRUE = 17
    VALUE = 18
    WHERE = 19
    IS_DEFINED = 20
    IS_TYPE = 21
    ARRAY_CONTAINS = 22
    ARRAY_LENGTH = 23
    CONTAINS = 24
    LENGTH = 25
    STARTS_WITH = 26
    ENDS_WITH = 27
    COUNT = 28
    COMMA = 29
    PLUS = 30
    MINUS = 31
    STAR = 32
    DOT = 33
    QUESTION_MARK = 34
    LT = 35
    LT_EQ = 36
    GT = 37
    GT_EQ = 38
    EQ = 39
    NEQ = 40
    BRACKET_LEFT = 41
    BRACKET_RIGHT = 42
    PAREN_LEFT = 43
    PAREN_RIGHT = 44
    LITERAL_STRING = 45
    LITERAL_INTEGER = 46
    LITERAL_DECIMAL = 47
    IDENTIFIER = 48
    IDENTIFIER_QUOTED = 49
    WS = 50
    COMMENT_SINGLE_LINE = 51
    COMMENT_MULTILINE = 52
    UNRECOGNIZED = 53

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'AND'", "'AS'", "'ASC'", "'BETWEEN'", "'BY'", "'DESC'", "'FALSE'", 
            "'FROM'", "'IN'", "'LIMIT'", "'NOT'", "'NULL'", "'OFFSET'", 
            "'OR'", "'ORDER'", "'SELECT'", "'TRUE'", "'VALUE'", "'WHERE'", 
            "'IS_DEFINED'", "'IS_TYPE'", "'ARRAY_CONTAINS'", "'ARRAY_LENGTH'", 
            "'CONTAINS'", "'LENGTH'", "'STARTS_WITH'", "'ENDS_WITH'", "'COUNT'", 
            "','", "'+'", "'-'", "'*'", "'.'", "'?'", "'<'", "'<='", "'>'", 
            "'>='", "'='", "'['", "']'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "AND", "AS", "ASC", "BETWEEN", "BY", "DESC", "FALSE", "FROM", 
            "IN", "LIMIT", "NOT", "NULL", "OFFSET", "OR", "ORDER", "SELECT", 
            "TRUE", "VALUE", "WHERE", "IS_DEFINED", "IS_TYPE", "ARRAY_CONTAINS", 
            "ARRAY_LENGTH", "CONTAINS", "LENGTH", "STARTS_WITH", "ENDS_WITH", 
            "COUNT", "COMMA", "PLUS", "MINUS", "STAR", "DOT", "QUESTION_MARK", 
            "LT", "LT_EQ", "GT", "GT_EQ", "EQ", "NEQ", "BRACKET_LEFT", "BRACKET_RIGHT", 
            "PAREN_LEFT", "PAREN_RIGHT", "LITERAL_STRING", "LITERAL_INTEGER", 
            "LITERAL_DECIMAL", "IDENTIFIER", "IDENTIFIER_QUOTED", "WS", 
            "COMMENT_SINGLE_LINE", "COMMENT_MULTILINE", "UNRECOGNIZED" ]

    ruleNames = [ "AND", "AS", "ASC", "BETWEEN", "BY", "DESC", "FALSE", 
                  "FROM", "IN", "LIMIT", "NOT", "NULL", "OFFSET", "OR", 
                  "ORDER", "SELECT", "TRUE", "VALUE", "WHERE", "IS_DEFINED", 
                  "IS_TYPE", "ARRAY_CONTAINS", "ARRAY_LENGTH", "CONTAINS", 
                  "LENGTH", "STARTS_WITH", "ENDS_WITH", "COUNT", "COMMA", 
                  "PLUS", "MINUS", "STAR", "DOT", "QUESTION_MARK", "LT", 
                  "LT_EQ", "GT", "GT_EQ", "EQ", "NEQ", "BRACKET_LEFT", "BRACKET_RIGHT", 
                  "PAREN_LEFT", "PAREN_RIGHT", "LITERAL_STRING", "LITERAL_INTEGER", 
                  "LITERAL_DECIMAL", "IDENTIFIER", "IDENTIFIER_QUOTED", 
                  "WS", "COMMENT_SINGLE_LINE", "COMMENT_MULTILINE", "UNRECOGNIZED", 
                  "DIGIT", "LETTER", "WHITESPACE" ]

    grammarFileName = "VerseQLLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None
